               ; declarating a integer variable
               .data
y:             .word 3

               ; declarating a integer variable
n:             .word 2

               ; assigning value to n
               .text
L0:
               ; checking value of variable
               load y

               store n

               ; creating an IF...THEN...ELSE block
               ; checking solution for relation (RELOP)
               ; checking value of variable
               load n

               ; designating an integer value
               ipush 0

               isub
               ifgt relop1_true
relop1_false:
               ipush 0
               goto relop1_end
relop1_true:
               ipush 1
relop1_end:
               ifeq then_end_1
               ; exiting program
               halt

then_end_1:
               ; declarating a integer variable
               .data
i:             .word 0

               ; assigning value to i
               .text
L1:
               ; creating an operation
               ; checking value of variable
               load i

               ; designating an integer value
               ipush 1

               iadd
               store i

               ; assigning value to i
               ; creating an operation
               ; checking value of variable
               load i

               ; designating an integer value
               ipush 1

               iadd
               store i

               ; declarating a integer variable
               .data
v:             .word 6

               ; assigning value to v
               .text
L2:
               ; creating an operation
               ; checking value of variable
               load v

               ; designating an integer value
               ipush 1

               isub
               store v

               ; assigning value to v
               ; creating an operation
               ; checking value of variable
               load v

               ; designating an integer value
               ipush 1

               isub
               store v

               ; declarating a integer variable
               .data
x:             .word 3

               ; assigning value to x
               .text
L3:
               ; creating an operation
               ; checking value of variable
               load x

               ; designating an integer value
               ipush 3

               irem
               store x

               ; declarating a integer variable
               .data
k:             .word 9

               ; assigning value to k
               .text
L4:
               ; creating an operation
               ; checking value of variable
               load k

               ; designating an integer value
               ipush 3

               imul
               store k

               ; declarating a integer variable
               .data
p:             .word 5

               ; assigning value to x
               .text
L5:
               ; creating an operation
               ; checking value of variable
               load x

               ; designating an integer value
               ipush 2

               idiv
               store x

               ; declarating a integer variable
               .data
o:             .word 10

               ; assigning value to o
               .text
L6:
               ; creating an operation
               ; checking value of variable
               load o

               ; designating an integer value
               ipush 5

               isub
               store o

               ; declarating a integer variable
               .data
t:             .word 4

               ; assigning value to t
               .text
L7:
               ; creating an operation
               ; checking value of variable
               load t

               ; designating an integer value
               ipush 3

               iadd
               store t

               ; creating a loop
LoopStart2:
               ; creating an IF...THEN...ELSE block
               ; checking solution for relation (RELOP)
               ; checking value of variable
               load t

               ; checking value of variable
               load o

               isub
               ifeq relop2_true
relop2_false:
               ipush 0
               goto relop2_end
relop2_true:
               ipush 1
relop2_end:
               ifeq then_end_2
               ; breaking a loop
               goto LoopEnd2

then_end_2:
               ; calling print
               ; checking value of variable
               load t

               jsr printInt

               ; creating a loop
LoopStart1:
               ; creating an IF...THEN...ELSE block
               ; checking solution for relation (RELOP)
               ; checking value of variable
               load t

               ; designating an integer value
               ipush 10

               isub
               ifgt relop3_true
relop3_false:
               ipush 0
               goto relop3_end
relop3_true:
               ipush 1
relop3_end:
               ifeq then_end_3
               ; breaking a loop
               goto LoopEnd1

then_end_3:
               goto LoopStart1
LoopEnd1:
               goto LoopStart2
LoopEnd2:
               ; exiting program
               halt

               ; includes
               halt
printInt:
               ipush 28
printInt1:     dup2
               iushr
               ipush 0xF
               iand
               jsr pNibble
               dup
               ifeq printInt2
               ipush 4
               isub
               goto printInt1
printInt2:     pop
               ret

pNibble:
               ipush 0x30
               iadd
               dup
               ipush 0x39
               isub
               ifle pNibble1
               ipush 0x0a
               iadd
pNibble1:      write
               ret

